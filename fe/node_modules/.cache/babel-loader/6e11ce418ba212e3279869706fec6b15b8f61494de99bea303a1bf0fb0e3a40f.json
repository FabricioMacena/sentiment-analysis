{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\macen\\\\OneDrive\\\\Documentos\\\\React-Flask Aplications\\\\sentiment-analysis\\\\fe\\\\src\\\\Form\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport { LoadingContainer } from \"./stylesLoading\";\nimport { Div } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [sentence, setSentence] = useState('');\n  const [sentiment, setSentiment] = useState('');\n  const [loading, setLoading] = useState(false);\n  function handleButton() {\n    const response_sentence = sentence;\n    setSentence('');\n    setLoading(true);\n    axios.post('http://localhost:5000/post_sentence', {\n      response_sentence\n    }).then(response => {\n      setSentiment(response.data.sentiment);\n      setLoading(false);\n    }).catch(error => {\n      console.log('Erro ao enviar a frase: ', error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Div, {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Insert a Sentence\",\n      name: \"set_sentence\",\n      value: sentence,\n      onChange: e => setSentence(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButton,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: loading ? 'Carregando...' : sentiment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"fy7xeZvltc0mcZfoSPgQUN1xoAo=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","axios","LoadingContainer","Div","jsxDEV","_jsxDEV","Form","_s","sentence","setSentence","sentiment","setSentiment","loading","setLoading","handleButton","response_sentence","post","then","response","data","catch","error","console","log","children","placeholder","name","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/macen/OneDrive/Documentos/React-Flask Aplications/sentiment-analysis/fe/src/Form/index.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport { LoadingContainer,  } from \"./stylesLoading\";\r\n\r\nimport { Div } from \"./styles\"\r\n\r\nexport default function Form(){\r\n    const [sentence, setSentence] = useState('');\r\n    const [sentiment, setSentiment] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function handleButton(){\r\n        const response_sentence = sentence;\r\n\r\n        setSentence('');\r\n        setLoading(true);\r\n\r\n        axios.post('http://localhost:5000/post_sentence', {response_sentence})\r\n            .then(response => {\r\n                setSentiment(response.data.sentiment)\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.log('Erro ao enviar a frase: ', error)\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Div>\r\n            <textarea \r\n                placeholder=\"Insert a Sentence\"\r\n                name=\"set_sentence\"\r\n                value={sentence}\r\n                onChange={(e) => setSentence(e.target.value)}\r\n            />\r\n            <button onClick={handleButton}>Check</button>\r\n            <div>\r\n                <span>{ loading ? 'Carregando...' : sentiment }</span>\r\n            </div>\r\n        </Div>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,gBAAgB,QAAU,iBAAiB;AAEpD,SAASC,GAAG,QAAQ,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,SAASc,YAAYA,CAAA,EAAE;IACnB,MAAMC,iBAAiB,GAAGP,QAAQ;IAElCC,WAAW,CAAC,EAAE,CAAC;IACfI,UAAU,CAAC,IAAI,CAAC;IAEhBZ,KAAK,CAACe,IAAI,CAAC,qCAAqC,EAAE;MAACD;IAAiB,CAAC,CAAC,CACjEE,IAAI,CAACC,QAAQ,IAAI;MACdP,YAAY,CAACO,QAAQ,CAACC,IAAI,CAACT,SAAS,CAAC;MACrCG,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;IAClD,CAAC,CAAC;EACV;EAEA,oBACIhB,OAAA,CAACF,GAAG;IAAAqB,QAAA,gBACAnB,OAAA;MACIoB,WAAW,EAAC,mBAAmB;MAC/BC,IAAI,EAAC,cAAc;MACnBC,KAAK,EAAEnB,QAAS;MAChBoB,QAAQ,EAAGC,CAAC,IAAKpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF7B,OAAA;MAAQ8B,OAAO,EAAErB,YAAa;MAAAU,QAAA,EAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7C7B,OAAA;MAAAmB,QAAA,eACInB,OAAA;QAAAmB,QAAA,EAAQZ,OAAO,GAAG,eAAe,GAAGF;MAAS;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC3B,EAAA,CAnCuBD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}