{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\macen\\\\OneDrive\\\\Documentos\\\\React-Flask Aplications\\\\sentiment-analysis\\\\fe\\\\src\\\\Form\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport { Div } from \"./styles\";\nimport Result from \"../Result\";\nimport Span from \"../SpanMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [sentence, setSentence] = useState('');\n  const [sentiment, setSentiment] = useState('');\n  const [language, setLanguage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [displayResult, setDisplayResult] = useState('none');\n  const [displaySpanMessage, setDisplaySpanMessage] = useState('none');\n  const [spanMessage, setSpanMessage] = useState('');\n  function handleButton() {\n    const response_sentence = sentence;\n    if (response_sentence.length >= 7) {\n      setDisplayResult('block');\n      setSentence('');\n      setLoading(true);\n      axios.post('http://localhost:5000/post_sentence', {\n        response_sentence\n      }).then(response => {\n        setSentiment(response.data.sentiment);\n        setLanguage(response.data.sentence_language);\n        setLoading(false);\n      }).catch(error => {\n        console.log('Erro ao enviar a frase: ', error);\n      });\n    } else {\n      setDisplaySpanMessage('block');\n      setSpanMessage('The sentence lenght must be at least 7 characters.');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Div, {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Insert a Sentence (in any language)\",\n      name: \"set_sentence\",\n      value: sentence,\n      onChange: e => {\n        setSentence(e.target.value);\n        setDisplaySpanMessage('none');\n        setDisplayResult('none');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Span, {\n      values: {\n        display: displaySpanMessage,\n        message: spanMessage\n      },\n      children: spanMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButton,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      states: {\n        sentiment,\n        language,\n        loading,\n        displayResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"ULXtjMQ4qUvN/y8oD33L/8wnalE=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","axios","Div","Result","Span","jsxDEV","_jsxDEV","Form","_s","sentence","setSentence","sentiment","setSentiment","language","setLanguage","loading","setLoading","displayResult","setDisplayResult","displaySpanMessage","setDisplaySpanMessage","spanMessage","setSpanMessage","handleButton","response_sentence","length","post","then","response","data","sentence_language","catch","error","console","log","children","placeholder","name","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","values","display","message","onClick","states","_c","$RefreshReg$"],"sources":["C:/Users/macen/OneDrive/Documentos/React-Flask Aplications/sentiment-analysis/fe/src/Form/index.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport { Div } from \"./styles\"\r\nimport Result from \"../Result\";\r\nimport Span from \"../SpanMessage\";\r\n\r\nexport default function Form(){\r\n    const [sentence, setSentence] = useState('');\r\n    const [sentiment, setSentiment] = useState('');\r\n    const [language, setLanguage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [displayResult, setDisplayResult] = useState('none');\r\n    const [displaySpanMessage, setDisplaySpanMessage] = useState('none');\r\n    const [spanMessage, setSpanMessage] = useState('');\r\n\r\n    function handleButton(){\r\n        const response_sentence = sentence;\r\n        \r\n        if (response_sentence.length >= 7 ){\r\n\r\n            setDisplayResult('block');\r\n            setSentence('');\r\n            setLoading(true);\r\n\r\n            axios.post('http://localhost:5000/post_sentence', {response_sentence})\r\n                .then(response => {\r\n\r\n                    setSentiment(response.data.sentiment)\r\n                    setLanguage(response.data.sentence_language)\r\n\r\n                    setLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    console.log('Erro ao enviar a frase: ', error)\r\n                });\r\n\r\n        } else {\r\n            setDisplaySpanMessage('block');\r\n            setSpanMessage('The sentence lenght must be at least 7 characters.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Div>\r\n            <textarea\r\n                placeholder=\"Insert a Sentence (in any language)\"\r\n                name=\"set_sentence\"\r\n                value={sentence}\r\n                onChange={\r\n                    (e) => {\r\n                        setSentence(e.target.value);\r\n                        setDisplaySpanMessage('none');\r\n                        setDisplayResult('none');\r\n                        \r\n                    }\r\n                }\r\n            />\r\n            <Span\r\n                values={{\r\n                    display: displaySpanMessage,\r\n                    message: spanMessage\r\n                }}\r\n            >\r\n                { spanMessage }\r\n            </Span>\r\n            <button onClick={handleButton}>Check</button>\r\n            <Result \r\n                states={{\r\n                    sentiment,\r\n                    language,\r\n                    loading,\r\n                    displayResult\r\n                }}\r\n            />\r\n        </Div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}